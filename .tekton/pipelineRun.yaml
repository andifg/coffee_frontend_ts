apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: coffee-frontend-ci-cd-
  namespace: coffee-app-build
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push, pull_request]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/*]"

    # How many runs we want to keep.
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  pipelineRef:
    resolver: cluster
    params:
      - name: kind
        value: pipeline
      - name: name
        value: npm-pipeline
      - name: namespace
        value: tekton-resources
  params:
    - name: dev-repo-url
      value: git@github.com:andifg/coffee_frontend_ts.git
    - name: dev-depl-url
      value: git@github.com:andifg/coffee-app-gitops.git
    - name: context-path
      value: /hello-world
    - name: image-name
      value: image-registry.openshift-image-registry.svc:5000/coffee-app-build/frontend
    - name: yq-select
      value: .frontend.image.name
    - name: yq-target
      value: values.yaml
    - name: dockerfile
      value: ./Containerfile
    - name: target-branch
      value: {{target_branch}}
    - name: source-branch
      value: {{source_branch}}
  workspaces:
    - name: ssh-creds
      secret:
        secretName: ssh-creds
    - name: app-pvc
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 300Mi
          volumeMode: Filesystem
    - name: argo-pvc
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 300Mi
          volumeMode: Filesystem